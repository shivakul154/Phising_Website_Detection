{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e4da29e6",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:31.654851Z",
     "iopub.status.busy": "2025-07-01T19:53:31.654453Z",
     "iopub.status.idle": "2025-07-01T19:53:35.311776Z",
     "shell.execute_reply": "2025-07-01T19:53:35.310670Z"
    },
    "papermill": {
     "duration": 3.666911,
     "end_time": "2025-07-01T19:53:35.313547",
     "exception": false,
     "start_time": "2025-07-01T19:53:31.646636",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/phishing-website-detector/phishing.txt\n",
      "/kaggle/input/phishing-website-detector/phishing.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "from sklearn.model_selection import train_test_split,cross_val_score\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "aa3f24f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.326123Z",
     "iopub.status.busy": "2025-07-01T19:53:35.325589Z",
     "iopub.status.idle": "2025-07-01T19:53:35.384100Z",
     "shell.execute_reply": "2025-07-01T19:53:35.383248Z"
    },
    "papermill": {
     "duration": 0.066352,
     "end_time": "2025-07-01T19:53:35.385706",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.319354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data=pd.read_csv(r\"../input/phishing-website-detector/phishing.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6b20a79c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.397714Z",
     "iopub.status.busy": "2025-07-01T19:53:35.397413Z",
     "iopub.status.idle": "2025-07-01T19:53:35.428211Z",
     "shell.execute_reply": "2025-07-01T19:53:35.427070Z"
    },
    "papermill": {
     "duration": 0.038579,
     "end_time": "2025-07-01T19:53:35.429708",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.391129",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>UsingIP</th>\n",
       "      <th>LongURL</th>\n",
       "      <th>ShortURL</th>\n",
       "      <th>Symbol@</th>\n",
       "      <th>Redirecting//</th>\n",
       "      <th>PrefixSuffix-</th>\n",
       "      <th>SubDomains</th>\n",
       "      <th>HTTPS</th>\n",
       "      <th>DomainRegLen</th>\n",
       "      <th>...</th>\n",
       "      <th>UsingPopupWindow</th>\n",
       "      <th>IframeRedirection</th>\n",
       "      <th>AgeofDomain</th>\n",
       "      <th>DNSRecording</th>\n",
       "      <th>WebsiteTraffic</th>\n",
       "      <th>PageRank</th>\n",
       "      <th>GoogleIndex</th>\n",
       "      <th>LinksPointingToPage</th>\n",
       "      <th>StatsReport</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Index  UsingIP  LongURL  ShortURL  Symbol@  Redirecting//  PrefixSuffix-  \\\n",
       "0      0        1        1         1        1              1             -1   \n",
       "1      1        1        0         1        1              1             -1   \n",
       "2      2        1        0         1        1              1             -1   \n",
       "3      3        1        0        -1        1              1             -1   \n",
       "4      4       -1        0        -1        1             -1             -1   \n",
       "\n",
       "   SubDomains  HTTPS  DomainRegLen  ...  UsingPopupWindow  IframeRedirection  \\\n",
       "0           0      1            -1  ...                 1                  1   \n",
       "1          -1     -1            -1  ...                 1                  1   \n",
       "2          -1     -1             1  ...                 1                  1   \n",
       "3           1      1            -1  ...                -1                  1   \n",
       "4           1      1            -1  ...                 1                  1   \n",
       "\n",
       "   AgeofDomain  DNSRecording  WebsiteTraffic  PageRank  GoogleIndex  \\\n",
       "0           -1            -1               0        -1            1   \n",
       "1            1            -1               1        -1            1   \n",
       "2           -1            -1               1        -1            1   \n",
       "3           -1            -1               0        -1            1   \n",
       "4            1             1               1        -1            1   \n",
       "\n",
       "   LinksPointingToPage  StatsReport  class  \n",
       "0                    1            1     -1  \n",
       "1                    0           -1     -1  \n",
       "2                   -1            1     -1  \n",
       "3                    1            1      1  \n",
       "4                   -1           -1      1  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6eee05a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.442478Z",
     "iopub.status.busy": "2025-07-01T19:53:35.442150Z",
     "iopub.status.idle": "2025-07-01T19:53:35.528433Z",
     "shell.execute_reply": "2025-07-01T19:53:35.527475Z"
    },
    "papermill": {
     "duration": 0.09432,
     "end_time": "2025-07-01T19:53:35.529957",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.435637",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>UsingIP</th>\n",
       "      <th>LongURL</th>\n",
       "      <th>ShortURL</th>\n",
       "      <th>Symbol@</th>\n",
       "      <th>Redirecting//</th>\n",
       "      <th>PrefixSuffix-</th>\n",
       "      <th>SubDomains</th>\n",
       "      <th>HTTPS</th>\n",
       "      <th>DomainRegLen</th>\n",
       "      <th>...</th>\n",
       "      <th>UsingPopupWindow</th>\n",
       "      <th>IframeRedirection</th>\n",
       "      <th>AgeofDomain</th>\n",
       "      <th>DNSRecording</th>\n",
       "      <th>WebsiteTraffic</th>\n",
       "      <th>PageRank</th>\n",
       "      <th>GoogleIndex</th>\n",
       "      <th>LinksPointingToPage</th>\n",
       "      <th>StatsReport</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "      <td>11054.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5526.500000</td>\n",
       "      <td>0.313914</td>\n",
       "      <td>-0.633345</td>\n",
       "      <td>0.738737</td>\n",
       "      <td>0.700561</td>\n",
       "      <td>0.741632</td>\n",
       "      <td>-0.734938</td>\n",
       "      <td>0.064049</td>\n",
       "      <td>0.251040</td>\n",
       "      <td>-0.336711</td>\n",
       "      <td>...</td>\n",
       "      <td>0.613353</td>\n",
       "      <td>0.816899</td>\n",
       "      <td>0.061335</td>\n",
       "      <td>0.377239</td>\n",
       "      <td>0.287407</td>\n",
       "      <td>-0.483626</td>\n",
       "      <td>0.721549</td>\n",
       "      <td>0.343948</td>\n",
       "      <td>0.719739</td>\n",
       "      <td>0.113986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3191.159272</td>\n",
       "      <td>0.949495</td>\n",
       "      <td>0.765973</td>\n",
       "      <td>0.674024</td>\n",
       "      <td>0.713625</td>\n",
       "      <td>0.670837</td>\n",
       "      <td>0.678165</td>\n",
       "      <td>0.817492</td>\n",
       "      <td>0.911856</td>\n",
       "      <td>0.941651</td>\n",
       "      <td>...</td>\n",
       "      <td>0.789845</td>\n",
       "      <td>0.576807</td>\n",
       "      <td>0.998162</td>\n",
       "      <td>0.926158</td>\n",
       "      <td>0.827680</td>\n",
       "      <td>0.875314</td>\n",
       "      <td>0.692395</td>\n",
       "      <td>0.569936</td>\n",
       "      <td>0.694276</td>\n",
       "      <td>0.993527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2763.250000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5526.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>8289.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>11053.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Index       UsingIP       LongURL      ShortURL       Symbol@  \\\n",
       "count  11054.000000  11054.000000  11054.000000  11054.000000  11054.000000   \n",
       "mean    5526.500000      0.313914     -0.633345      0.738737      0.700561   \n",
       "std     3191.159272      0.949495      0.765973      0.674024      0.713625   \n",
       "min        0.000000     -1.000000     -1.000000     -1.000000     -1.000000   \n",
       "25%     2763.250000     -1.000000     -1.000000      1.000000      1.000000   \n",
       "50%     5526.500000      1.000000     -1.000000      1.000000      1.000000   \n",
       "75%     8289.750000      1.000000     -1.000000      1.000000      1.000000   \n",
       "max    11053.000000      1.000000      1.000000      1.000000      1.000000   \n",
       "\n",
       "       Redirecting//  PrefixSuffix-    SubDomains         HTTPS  DomainRegLen  \\\n",
       "count   11054.000000   11054.000000  11054.000000  11054.000000  11054.000000   \n",
       "mean        0.741632      -0.734938      0.064049      0.251040     -0.336711   \n",
       "std         0.670837       0.678165      0.817492      0.911856      0.941651   \n",
       "min        -1.000000      -1.000000     -1.000000     -1.000000     -1.000000   \n",
       "25%         1.000000      -1.000000     -1.000000     -1.000000     -1.000000   \n",
       "50%         1.000000      -1.000000      0.000000      1.000000     -1.000000   \n",
       "75%         1.000000      -1.000000      1.000000      1.000000      1.000000   \n",
       "max         1.000000       1.000000      1.000000      1.000000      1.000000   \n",
       "\n",
       "       ...  UsingPopupWindow  IframeRedirection   AgeofDomain  DNSRecording  \\\n",
       "count  ...      11054.000000       11054.000000  11054.000000  11054.000000   \n",
       "mean   ...          0.613353           0.816899      0.061335      0.377239   \n",
       "std    ...          0.789845           0.576807      0.998162      0.926158   \n",
       "min    ...         -1.000000          -1.000000     -1.000000     -1.000000   \n",
       "25%    ...          1.000000           1.000000     -1.000000     -1.000000   \n",
       "50%    ...          1.000000           1.000000      1.000000      1.000000   \n",
       "75%    ...          1.000000           1.000000      1.000000      1.000000   \n",
       "max    ...          1.000000           1.000000      1.000000      1.000000   \n",
       "\n",
       "       WebsiteTraffic      PageRank   GoogleIndex  LinksPointingToPage  \\\n",
       "count    11054.000000  11054.000000  11054.000000         11054.000000   \n",
       "mean         0.287407     -0.483626      0.721549             0.343948   \n",
       "std          0.827680      0.875314      0.692395             0.569936   \n",
       "min         -1.000000     -1.000000     -1.000000            -1.000000   \n",
       "25%          0.000000     -1.000000      1.000000             0.000000   \n",
       "50%          1.000000     -1.000000      1.000000             0.000000   \n",
       "75%          1.000000      1.000000      1.000000             1.000000   \n",
       "max          1.000000      1.000000      1.000000             1.000000   \n",
       "\n",
       "        StatsReport         class  \n",
       "count  11054.000000  11054.000000  \n",
       "mean       0.719739      0.113986  \n",
       "std        0.694276      0.993527  \n",
       "min       -1.000000     -1.000000  \n",
       "25%        1.000000     -1.000000  \n",
       "50%        1.000000      1.000000  \n",
       "75%        1.000000      1.000000  \n",
       "max        1.000000      1.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ce374441",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.544183Z",
     "iopub.status.busy": "2025-07-01T19:53:35.543828Z",
     "iopub.status.idle": "2025-07-01T19:53:35.551824Z",
     "shell.execute_reply": "2025-07-01T19:53:35.551039Z"
    },
    "papermill": {
     "duration": 0.01666,
     "end_time": "2025-07-01T19:53:35.553481",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.536821",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Index', 'UsingIP', 'LongURL', 'ShortURL', 'Symbol@', 'Redirecting//',\n",
       "       'PrefixSuffix-', 'SubDomains', 'HTTPS', 'DomainRegLen', 'Favicon',\n",
       "       'NonStdPort', 'HTTPSDomainURL', 'RequestURL', 'AnchorURL',\n",
       "       'LinksInScriptTags', 'ServerFormHandler', 'InfoEmail', 'AbnormalURL',\n",
       "       'WebsiteForwarding', 'StatusBarCust', 'DisableRightClick',\n",
       "       'UsingPopupWindow', 'IframeRedirection', 'AgeofDomain', 'DNSRecording',\n",
       "       'WebsiteTraffic', 'PageRank', 'GoogleIndex', 'LinksPointingToPage',\n",
       "       'StatsReport', 'class'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "227d6d8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.567511Z",
     "iopub.status.busy": "2025-07-01T19:53:35.567009Z",
     "iopub.status.idle": "2025-07-01T19:53:35.573243Z",
     "shell.execute_reply": "2025-07-01T19:53:35.572286Z"
    },
    "papermill": {
     "duration": 0.01499,
     "end_time": "2025-07-01T19:53:35.574842",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.559852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11054, 32)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "07225198",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.589393Z",
     "iopub.status.busy": "2025-07-01T19:53:35.588747Z",
     "iopub.status.idle": "2025-07-01T19:53:35.612670Z",
     "shell.execute_reply": "2025-07-01T19:53:35.611819Z"
    },
    "papermill": {
     "duration": 0.032962,
     "end_time": "2025-07-01T19:53:35.614395",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.581433",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>UsingIP</th>\n",
       "      <th>LongURL</th>\n",
       "      <th>ShortURL</th>\n",
       "      <th>Symbol@</th>\n",
       "      <th>Redirecting//</th>\n",
       "      <th>PrefixSuffix-</th>\n",
       "      <th>SubDomains</th>\n",
       "      <th>HTTPS</th>\n",
       "      <th>DomainRegLen</th>\n",
       "      <th>...</th>\n",
       "      <th>UsingPopupWindow</th>\n",
       "      <th>IframeRedirection</th>\n",
       "      <th>AgeofDomain</th>\n",
       "      <th>DNSRecording</th>\n",
       "      <th>WebsiteTraffic</th>\n",
       "      <th>PageRank</th>\n",
       "      <th>GoogleIndex</th>\n",
       "      <th>LinksPointingToPage</th>\n",
       "      <th>StatsReport</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11049</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11050</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11051</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11052</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11053</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11054 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Index  UsingIP  LongURL  ShortURL  Symbol@  Redirecting//  \\\n",
       "0      False    False    False     False    False          False   \n",
       "1      False    False    False     False    False          False   \n",
       "2      False    False    False     False    False          False   \n",
       "3      False    False    False     False    False          False   \n",
       "4      False    False    False     False    False          False   \n",
       "...      ...      ...      ...       ...      ...            ...   \n",
       "11049  False    False    False     False    False          False   \n",
       "11050  False    False    False     False    False          False   \n",
       "11051  False    False    False     False    False          False   \n",
       "11052  False    False    False     False    False          False   \n",
       "11053  False    False    False     False    False          False   \n",
       "\n",
       "       PrefixSuffix-  SubDomains  HTTPS  DomainRegLen  ...  UsingPopupWindow  \\\n",
       "0              False       False  False         False  ...             False   \n",
       "1              False       False  False         False  ...             False   \n",
       "2              False       False  False         False  ...             False   \n",
       "3              False       False  False         False  ...             False   \n",
       "4              False       False  False         False  ...             False   \n",
       "...              ...         ...    ...           ...  ...               ...   \n",
       "11049          False       False  False         False  ...             False   \n",
       "11050          False       False  False         False  ...             False   \n",
       "11051          False       False  False         False  ...             False   \n",
       "11052          False       False  False         False  ...             False   \n",
       "11053          False       False  False         False  ...             False   \n",
       "\n",
       "       IframeRedirection  AgeofDomain  DNSRecording  WebsiteTraffic  PageRank  \\\n",
       "0                  False        False         False           False     False   \n",
       "1                  False        False         False           False     False   \n",
       "2                  False        False         False           False     False   \n",
       "3                  False        False         False           False     False   \n",
       "4                  False        False         False           False     False   \n",
       "...                  ...          ...           ...             ...       ...   \n",
       "11049              False        False         False           False     False   \n",
       "11050              False        False         False           False     False   \n",
       "11051              False        False         False           False     False   \n",
       "11052              False        False         False           False     False   \n",
       "11053              False        False         False           False     False   \n",
       "\n",
       "       GoogleIndex  LinksPointingToPage  StatsReport  class  \n",
       "0            False                False        False  False  \n",
       "1            False                False        False  False  \n",
       "2            False                False        False  False  \n",
       "3            False                False        False  False  \n",
       "4            False                False        False  False  \n",
       "...            ...                  ...          ...    ...  \n",
       "11049        False                False        False  False  \n",
       "11050        False                False        False  False  \n",
       "11051        False                False        False  False  \n",
       "11052        False                False        False  False  \n",
       "11053        False                False        False  False  \n",
       "\n",
       "[11054 rows x 32 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "647b451e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.628710Z",
     "iopub.status.busy": "2025-07-01T19:53:35.628389Z",
     "iopub.status.idle": "2025-07-01T19:53:35.639566Z",
     "shell.execute_reply": "2025-07-01T19:53:35.638493Z"
    },
    "papermill": {
     "duration": 0.019845,
     "end_time": "2025-07-01T19:53:35.640962",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.621117",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index                  0\n",
       "UsingIP                0\n",
       "LongURL                0\n",
       "ShortURL               0\n",
       "Symbol@                0\n",
       "Redirecting//          0\n",
       "PrefixSuffix-          0\n",
       "SubDomains             0\n",
       "HTTPS                  0\n",
       "DomainRegLen           0\n",
       "Favicon                0\n",
       "NonStdPort             0\n",
       "HTTPSDomainURL         0\n",
       "RequestURL             0\n",
       "AnchorURL              0\n",
       "LinksInScriptTags      0\n",
       "ServerFormHandler      0\n",
       "InfoEmail              0\n",
       "AbnormalURL            0\n",
       "WebsiteForwarding      0\n",
       "StatusBarCust          0\n",
       "DisableRightClick      0\n",
       "UsingPopupWindow       0\n",
       "IframeRedirection      0\n",
       "AgeofDomain            0\n",
       "DNSRecording           0\n",
       "WebsiteTraffic         0\n",
       "PageRank               0\n",
       "GoogleIndex            0\n",
       "LinksPointingToPage    0\n",
       "StatsReport            0\n",
       "class                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d86079db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.655367Z",
     "iopub.status.busy": "2025-07-01T19:53:35.655017Z",
     "iopub.status.idle": "2025-07-01T19:53:35.671149Z",
     "shell.execute_reply": "2025-07-01T19:53:35.670232Z"
    },
    "papermill": {
     "duration": 0.025208,
     "end_time": "2025-07-01T19:53:35.672782",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.647574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>UsingIP</th>\n",
       "      <th>LongURL</th>\n",
       "      <th>ShortURL</th>\n",
       "      <th>Symbol@</th>\n",
       "      <th>Redirecting//</th>\n",
       "      <th>PrefixSuffix-</th>\n",
       "      <th>SubDomains</th>\n",
       "      <th>HTTPS</th>\n",
       "      <th>DomainRegLen</th>\n",
       "      <th>...</th>\n",
       "      <th>DisableRightClick</th>\n",
       "      <th>UsingPopupWindow</th>\n",
       "      <th>IframeRedirection</th>\n",
       "      <th>AgeofDomain</th>\n",
       "      <th>DNSRecording</th>\n",
       "      <th>WebsiteTraffic</th>\n",
       "      <th>PageRank</th>\n",
       "      <th>GoogleIndex</th>\n",
       "      <th>LinksPointingToPage</th>\n",
       "      <th>StatsReport</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Index  UsingIP  LongURL  ShortURL  Symbol@  Redirecting//  PrefixSuffix-  \\\n",
       "0      0        1        1         1        1              1             -1   \n",
       "1      1        1        0         1        1              1             -1   \n",
       "2      2        1        0         1        1              1             -1   \n",
       "3      3        1        0        -1        1              1             -1   \n",
       "4      4       -1        0        -1        1             -1             -1   \n",
       "\n",
       "   SubDomains  HTTPS  DomainRegLen  ...  DisableRightClick  UsingPopupWindow  \\\n",
       "0           0      1            -1  ...                  1                 1   \n",
       "1          -1     -1            -1  ...                  1                 1   \n",
       "2          -1     -1             1  ...                  1                 1   \n",
       "3           1      1            -1  ...                  1                -1   \n",
       "4           1      1            -1  ...                  1                 1   \n",
       "\n",
       "   IframeRedirection  AgeofDomain  DNSRecording  WebsiteTraffic  PageRank  \\\n",
       "0                  1           -1            -1               0        -1   \n",
       "1                  1            1            -1               1        -1   \n",
       "2                  1           -1            -1               1        -1   \n",
       "3                  1           -1            -1               0        -1   \n",
       "4                  1            1             1               1        -1   \n",
       "\n",
       "   GoogleIndex  LinksPointingToPage  StatsReport  \n",
       "0            1                    1            1  \n",
       "1            1                    0           -1  \n",
       "2            1                   -1            1  \n",
       "3            1                    1            1  \n",
       "4            1                   -1           -1  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X= data.drop(columns='class')\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dbc8a94b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.688064Z",
     "iopub.status.busy": "2025-07-01T19:53:35.687718Z",
     "iopub.status.idle": "2025-07-01T19:53:35.696559Z",
     "shell.execute_reply": "2025-07-01T19:53:35.695290Z"
    },
    "papermill": {
     "duration": 0.018296,
     "end_time": "2025-07-01T19:53:35.698104",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.679808",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   class\n",
       "0     -1\n",
       "1     -1\n",
       "2     -1\n",
       "3      1\n",
       "4      1"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y=data['class']\n",
    "Y=pd.DataFrame(Y)\n",
    "Y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e78a69f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.714386Z",
     "iopub.status.busy": "2025-07-01T19:53:35.714079Z",
     "iopub.status.idle": "2025-07-01T19:53:35.727718Z",
     "shell.execute_reply": "2025-07-01T19:53:35.726907Z"
    },
    "papermill": {
     "duration": 0.023691,
     "end_time": "2025-07-01T19:53:35.729354",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.705663",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_X,test_X,train_Y,test_Y=train_test_split(X,Y,test_size=0.3,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "60ecdc09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.745260Z",
     "iopub.status.busy": "2025-07-01T19:53:35.744889Z",
     "iopub.status.idle": "2025-07-01T19:53:35.750130Z",
     "shell.execute_reply": "2025-07-01T19:53:35.749212Z"
    },
    "papermill": {
     "duration": 0.014867,
     "end_time": "2025-07-01T19:53:35.751477",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.736610",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7737, 31)\n",
      "(3317, 31)\n",
      "(7737, 1)\n",
      "(3317, 1)\n"
     ]
    }
   ],
   "source": [
    "print(train_X.shape)\n",
    "print(test_X.shape)\n",
    "print(train_Y.shape)\n",
    "print(test_Y.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "890615c8",
   "metadata": {
    "papermill": {
     "duration": 0.006676,
     "end_time": "2025-07-01T19:53:35.765222",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.758546",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "###  Logistic regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0e0efd5a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:35.780576Z",
     "iopub.status.busy": "2025-07-01T19:53:35.779850Z",
     "iopub.status.idle": "2025-07-01T19:53:37.823582Z",
     "shell.execute_reply": "2025-07-01T19:53:37.822533Z"
    },
    "papermill": {
     "duration": 2.053153,
     "end_time": "2025-07-01T19:53:37.825320",
     "exception": false,
     "start_time": "2025-07-01T19:53:35.772167",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.pipeline import make_pipeline\n",
    "from matplotlib import pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\n",
    "\n",
    "pipe = make_pipeline(\n",
    "    StandardScaler(),\n",
    "    LogisticRegression(\n",
    "        penalty='l2',         # default\n",
    "        solver='lbfgs',       # good generalâ€‘purpose solver\n",
    "        max_iter=1000,        # give it room\n",
    "        n_jobs=-1             # parallelize if you like\n",
    "    )\n",
    ")\n",
    "\n",
    "model_1=pipe.fit(train_X, train_Y.squeeze())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d0fa7cd7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:37.841590Z",
     "iopub.status.busy": "2025-07-01T19:53:37.841134Z",
     "iopub.status.idle": "2025-07-01T19:53:37.851648Z",
     "shell.execute_reply": "2025-07-01T19:53:37.850491Z"
    },
    "papermill": {
     "duration": 0.020353,
     "end_time": "2025-07-01T19:53:37.853398",
     "exception": false,
     "start_time": "2025-07-01T19:53:37.833045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "logreg=LogisticRegression()\n",
    "\n",
    "logreg_predict= model_1.predict(test_X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fab8ced9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:37.868953Z",
     "iopub.status.busy": "2025-07-01T19:53:37.868617Z",
     "iopub.status.idle": "2025-07-01T19:53:37.880194Z",
     "shell.execute_reply": "2025-07-01T19:53:37.878962Z"
    },
    "papermill": {
     "duration": 0.021069,
     "end_time": "2025-07-01T19:53:37.881725",
     "exception": false,
     "start_time": "2025-07-01T19:53:37.860656",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9267410310521556\n"
     ]
    }
   ],
   "source": [
    "accuracy = pipe.score(test_X, test_Y)\n",
    "print(accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "231deed6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:37.897754Z",
     "iopub.status.busy": "2025-07-01T19:53:37.897416Z",
     "iopub.status.idle": "2025-07-01T19:53:37.916231Z",
     "shell.execute_reply": "2025-07-01T19:53:37.915210Z"
    },
    "papermill": {
     "duration": 0.028431,
     "end_time": "2025-07-01T19:53:37.917788",
     "exception": false,
     "start_time": "2025-07-01T19:53:37.889357",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "          -1       0.90      0.93      0.91      1402\n",
      "           1       0.95      0.92      0.94      1915\n",
      "\n",
      "    accuracy                           0.93      3317\n",
      "   macro avg       0.92      0.93      0.93      3317\n",
      "weighted avg       0.93      0.93      0.93      3317\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(logreg_predict,test_Y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2deba68d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:37.933945Z",
     "iopub.status.busy": "2025-07-01T19:53:37.933626Z",
     "iopub.status.idle": "2025-07-01T19:53:37.940950Z",
     "shell.execute_reply": "2025-07-01T19:53:37.940040Z"
    },
    "papermill": {
     "duration": 0.017693,
     "end_time": "2025-07-01T19:53:37.942816",
     "exception": false,
     "start_time": "2025-07-01T19:53:37.925123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def plot_confusion_matrix(test_Y, predict_y):\n",
    " C = confusion_matrix(test_Y, predict_y)\n",
    " A =(((C.T)/(C.sum(axis=1))).T)\n",
    " B =(C/C.sum(axis=0))\n",
    " plt.figure(figsize=(20,4))\n",
    " labels = [1,2]\n",
    " cmap=sns.light_palette(\"blue\")\n",
    " plt.subplot(1, 3, 1)\n",
    " sns.heatmap(C, annot=True, cmap=cmap, fmt=\".3f\", xticklabels=labels, yticklabels=labels)\n",
    " plt.xlabel('Predicted Class')\n",
    " plt.ylabel('Original Class')\n",
    " plt.title(\"Confusion matrix\")\n",
    " plt.subplot(1, 3, 2)\n",
    " sns.heatmap(B, annot=True, cmap=cmap, fmt=\".3f\", xticklabels=labels, yticklabels=labels)\n",
    " plt.xlabel('Predicted Class')\n",
    " plt.ylabel('Original Class')\n",
    " plt.title(\"Precision matrix\")\n",
    " plt.subplot(1, 3, 3)\n",
    " sns.heatmap(A, annot=True, cmap=cmap, fmt=\".3f\", xticklabels=labels, yticklabels=labels)\n",
    " plt.xlabel('Predicted Class')\n",
    " plt.ylabel('Original Class')\n",
    " plt.title(\"Recall matrix\")\n",
    " plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3e507eef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:37.960502Z",
     "iopub.status.busy": "2025-07-01T19:53:37.960162Z",
     "iopub.status.idle": "2025-07-01T19:53:38.706222Z",
     "shell.execute_reply": "2025-07-01T19:53:38.705153Z"
    },
    "papermill": {
     "duration": 0.757508,
     "end_time": "2025-07-01T19:53:38.707724",
     "exception": false,
     "start_time": "2025-07-01T19:53:37.950216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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2rRpk7p16yZJqlOnjv7777/cNgcAAJArxCIAgOIgIiJCrq6uVp+IiIgs654+fVppaWny9PS0Kvf09FRsbGyW5xw5ckSrVq1SWlqavvrqK40fP14zZ87Ua6+9luf3UtQQiwAAioPcDLaQbDebNNcJjvvuu0+RkZH6/vvvtXHjRj388MOSpH///VcVKlTIbXMAAAC5QiwCACgOQkNDlZiYaPUJDQ3Ns/bT09Pl4eGhhQsXytfXV71799bYsWMVGRmZZ9coqohFAADFQW4GW9hyNql9rmpLmjp1qnr27Knp06erf//+lozK2rVrLVM0AQAA8guxCACgOHBycrLMErgZd3d3lShRQnFxcVblcXFx8vLyyvKcSpUqycHBQSVKlLCU1a1bV7Gxsbp06ZIcHR1vvfNFHLEIAKA4CA0NVUhIiFVZdrHJjWaTHjx4MMtzjhw5os2bN6tv37766quv9Mcff+j555/X5cuXFR4enuN+5jrB0aZNG50+fVrnzp1TuXLlLOVDhw5VyZIlc9scAABArhCLAABgzdHRUb6+voqKilKPHj0kGTM0oqKiFBwcnOU5zZs314oVK5Seni47O2Nxh99//12VKlUiuXETxCIAgOIgN4MtbsW1s0lLlCghX19fnThxQtOnT89VgiPXS1RJUokSJawe4pJUrVo1eXh43EpzAAAAuUIsAgCAtZCQEL377rtaunSpDhw4oOeee07JyckaOHCgJKlfv35WS1w999xzio+P14gRI/T7779r3bp1mjJlioYNG2arWyhUiEUAALjqVmeT1qpVK9vZpDmV6xkckrRq1Sp9/PHHOn78eKaL7dq161aaBAAAyDFiEQAArPXu3VunTp1SWFiYYmNj5ePjo/Xr11uWijh+/LhlpoYkValSRd98841Gjhyphg0bqnLlyhoxYoReffVVW91CoUIsAgDAVbacTZrrGRxvvfWWBg4cKE9PT/3yyy9q1qyZKlSooCNHjqhjx465bQ4AACBXiEUAAMhacHCwjh07ptTUVG3btk1+fn6WY9HR0VqyZIlVfX9/f/30009KSUnRn3/+qTFjxliNokTWiEUAAMjMVrNJcz2D4+2339bChQv1xBNPaMmSJXrllVdUo0YNhYWFKT4+PrfNAQAA5AqxCAAAsCViEQAAMrPVbNJcJziOHz+uBx98UJLk4uKi8+fPS5Keeuop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XbvWeX5PQF7HItd69VXjvcmbb1qX16ghrV5txCGJidLKlZKHR57cDgoBR0dH+fr6Kirq6u9V6enpioqKkr+/f47bSU9Pz3afj+yQ4CgmXn99srZt26YJEyZrxYqV8vN7QMOGPWe1Hqu//4P66qtvLJ/XXptywzY3btyg2bNnafDgofrgg+W6995aeuGFYMXHx1vqvPnmTH3//RZFRLyhyMh3derUKb366tU3vWlpaRo5coQuX76iRYveV3j4RH355RdauDAy738IKFRKlZL27JGGDcv6uJeX9WfgQCk9Xfr006t1HnlEWrZMev99qVEjqXlzacWKq8dXrszczvr1UnS0dOpU9n1bvly67z6pfXupSxepVStp4cKrx8uUkTZskI4dk3x9jeTGhAnStXtO+/tL//uftGiR1Lix8RJizRqjXQAoLnISS1xr7949Gj9+rLp166Fly1aodes2GjXqJf355x+WOv/887eGDBmkqlWrKTJyoVas+EiDBg2Wo+PVkUcTJ4bp2LFjmjlzlv73v5Vq06adxowZrUOHDub7PaPo69VLmjVLmjhRuv9+I5755pvsB0+89pr0zDPS8OFSvXpGouKzzyQfn6t1WreW5s+XHnjAiD8cHIxYo2TJq3V27jTiobp1jZcSJpNRx47f+Aqt0NBQJSYmWn2unaGRFzKWhdixY4def/11hYSEKDo6Ok+vARRk+RGLSDd/v3LlymU99FCAHn30sXy7NxRf+RGLZGjSxKi7Z491ecmSRtxhNkvt2hnvXxwdpS++MGISFA8hISF69913tXTpUh04cEDPPfeckpOTLctn9uvXzyqWiYiI0MaNG3XkyBEdOHBAM2fO1LJly/Tkk0/m6roms9lsztM7KQASE5Ns3YUCJSUlRW3bttL06TPVokVLS3m/fn3l799czz33vCZODNf58+c1Y8asHLc7cGA/1at3n0aNelWSkWHr2rWTevXqrf79Byop6bw6dAjQ5Mmv66GHAiRJf/11VL16PaZFi5aoQYMG2rr1R4WEvKh169arQoUKkqRPP12lefPe0oYNUXJwcMjDn0Th5+ZW2tZdsAmzWerRQ/r88+zrfPaZkVgIMP6qqUQJ6a+/pPBwafHinF3H3d2YMTJokDFDIyt16hizLpo0MV4kSMZLhK++ku66S/rvP+nZZ6XXXzcSJpcvG3UiIox7qFvX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\n",
      "text/plain": [
       "<Figure size 2000x400 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(test_Y, logreg_predict)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3ef277d",
   "metadata": {
    "papermill": {
     "duration": 0.008367,
     "end_time": "2025-07-01T19:53:38.724177",
     "exception": false,
     "start_time": "2025-07-01T19:53:38.715810",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## KNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "5183e17e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:38.741174Z",
     "iopub.status.busy": "2025-07-01T19:53:38.740815Z",
     "iopub.status.idle": "2025-07-01T19:53:38.863381Z",
     "shell.execute_reply": "2025-07-01T19:53:38.862457Z"
    },
    "papermill": {
     "duration": 0.132871,
     "end_time": "2025-07-01T19:53:38.864973",
     "exception": false,
     "start_time": "2025-07-01T19:53:38.732102",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "d8dd1d42",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:38.881808Z",
     "iopub.status.busy": "2025-07-01T19:53:38.881530Z",
     "iopub.status.idle": "2025-07-01T19:53:38.898555Z",
     "shell.execute_reply": "2025-07-01T19:53:38.897744Z"
    },
    "papermill": {
     "duration": 0.02759,
     "end_time": "2025-07-01T19:53:38.900410",
     "exception": false,
     "start_time": "2025-07-01T19:53:38.872820",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "knn=KNeighborsClassifier(n_neighbors=3)\n",
    "knn = make_pipeline(\n",
    "    StandardScaler(),       # KNN distance metrics benefit from scaling\n",
    "    KNeighborsClassifier(\n",
    "        n_neighbors=5,      # tweak as needed\n",
    "        metric='minkowski', # default (Euclidean distance)\n",
    "        n_jobs=-1           # parallelize distance computations\n",
    "    )\n",
    ")\n",
    "model_2= knn.fit(train_X,train_Y.squeeze())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "81249845",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:38.917857Z",
     "iopub.status.busy": "2025-07-01T19:53:38.917557Z",
     "iopub.status.idle": "2025-07-01T19:53:39.178104Z",
     "shell.execute_reply": "2025-07-01T19:53:39.177289Z"
    },
    "papermill": {
     "duration": 0.270916,
     "end_time": "2025-07-01T19:53:39.179675",
     "exception": false,
     "start_time": "2025-07-01T19:53:38.908759",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9372927343985529"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn_predict=model_2.predict(test_X)\n",
    "accuracy_score(knn_predict,test_Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "33da5a72",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:39.197927Z",
     "iopub.status.busy": "2025-07-01T19:53:39.197636Z",
     "iopub.status.idle": "2025-07-01T19:53:39.217557Z",
     "shell.execute_reply": "2025-07-01T19:53:39.216318Z"
    },
    "papermill": {
     "duration": 0.031157,
     "end_time": "2025-07-01T19:53:39.219048",
     "exception": false,
     "start_time": "2025-07-01T19:53:39.187891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "          -1       0.94      0.92      0.93      1455\n",
      "           1       0.94      0.95      0.94      1862\n",
      "\n",
      "    accuracy                           0.94      3317\n",
      "   macro avg       0.94      0.94      0.94      3317\n",
      "weighted avg       0.94      0.94      0.94      3317\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(test_Y,knn_predict))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a133e8ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:39.236393Z",
     "iopub.status.busy": "2025-07-01T19:53:39.236089Z",
     "iopub.status.idle": "2025-07-01T19:53:39.828522Z",
     "shell.execute_reply": "2025-07-01T19:53:39.827678Z"
    },
    "papermill": {
     "duration": 0.60286,
     "end_time": "2025-07-01T19:53:39.830058",
     "exception": false,
     "start_time": "2025-07-01T19:53:39.227198",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x400 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(test_Y, knn_predict)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b867e40",
   "metadata": {
    "papermill": {
     "duration": 0.008437,
     "end_time": "2025-07-01T19:53:39.848810",
     "exception": false,
     "start_time": "2025-07-01T19:53:39.840373",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Decision Tree classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a871fa22",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:39.867160Z",
     "iopub.status.busy": "2025-07-01T19:53:39.866820Z",
     "iopub.status.idle": "2025-07-01T19:53:39.938642Z",
     "shell.execute_reply": "2025-07-01T19:53:39.937693Z"
    },
    "papermill": {
     "duration": 0.083028,
     "end_time": "2025-07-01T19:53:39.940335",
     "exception": false,
     "start_time": "2025-07-01T19:53:39.857307",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier\n",
    "dtree=DecisionTreeClassifier()\n",
    "model_3=dtree.fit(train_X,train_Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "8b4a06e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:39.961724Z",
     "iopub.status.busy": "2025-07-01T19:53:39.960616Z",
     "iopub.status.idle": "2025-07-01T19:53:39.971772Z",
     "shell.execute_reply": "2025-07-01T19:53:39.971026Z"
    },
    "papermill": {
     "duration": 0.023233,
     "end_time": "2025-07-01T19:53:39.973313",
     "exception": false,
     "start_time": "2025-07-01T19:53:39.950080",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9502562556526982"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtree_predict=model_3.predict(test_X)\n",
    "accuracy_score(dtree_predict,test_Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "cd1d958f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:39.992870Z",
     "iopub.status.busy": "2025-07-01T19:53:39.992546Z",
     "iopub.status.idle": "2025-07-01T19:53:40.010664Z",
     "shell.execute_reply": "2025-07-01T19:53:40.009647Z"
    },
    "papermill": {
     "duration": 0.029903,
     "end_time": "2025-07-01T19:53:40.012184",
     "exception": false,
     "start_time": "2025-07-01T19:53:39.982281",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "          -1       0.94      0.94      0.94      1456\n",
      "           1       0.96      0.96      0.96      1861\n",
      "\n",
      "    accuracy                           0.95      3317\n",
      "   macro avg       0.95      0.95      0.95      3317\n",
      "weighted avg       0.95      0.95      0.95      3317\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(dtree_predict,test_Y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a93967b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:40.031540Z",
     "iopub.status.busy": "2025-07-01T19:53:40.031260Z",
     "iopub.status.idle": "2025-07-01T19:53:40.592103Z",
     "shell.execute_reply": "2025-07-01T19:53:40.591098Z"
    },
    "papermill": {
     "duration": 0.57235,
     "end_time": "2025-07-01T19:53:40.593535",
     "exception": false,
     "start_time": "2025-07-01T19:53:40.021185",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x400 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(test_Y, dtree_predict)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76c74521",
   "metadata": {
    "papermill": {
     "duration": 0.009512,
     "end_time": "2025-07-01T19:53:40.613003",
     "exception": false,
     "start_time": "2025-07-01T19:53:40.603491",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "61d27046",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-01T19:53:40.634274Z",
     "iopub.status.busy": "2025-07-01T19:53:40.633260Z",
     "iopub.status.idle": "2025-07-01T19:53:40.757883Z",
     "shell.execute_reply": "2025-07-01T19:53:40.757034Z"
    },
    "papermill": {
     "duration": 0.136833,
     "end_time": "2025-07-01T19:53:40.759536",
     "exception": false,
     "start_time": "2025-07-01T19:53:40.622703",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e08ad583",
   "metadata": {
    "papermill": {
     "duration": 0.010066,
     "end_time": "2025-07-01T19:53:40.780171",
     "exception": false,
     "start_time": "2025-07-01T19:53:40.770105",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 532277,
     "sourceId": 975216,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 16.758777,
   "end_time": "2025-07-01T19:53:43.409364",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-01T19:53:26.650587",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
